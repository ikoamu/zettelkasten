:PROPERTIES:
:ID:       C28C4EAE-E86F-4788-B8FE-2A3F60CBE30B
:END:
#+title: org-modeとLiveCoding
#+filetags: :tidalcycles:org-mode:

#+begin_src elisp :results silent
  (setq org-image-actual-width nil)
  (org-toggle-inline-images)
#+end_src

* soundcheck
- 発表でPC音声を鳴らしたいのでサウンドチェックします
- 音が鳴っていたらリアクションして欲しいです！

#+begin_src tidal :results silent
d1 $ sound "test"
#+end_src

#+begin_src tidal :results silent
hush
#+end_src

* 自己紹介
#+ATTR_ORG: :width 250
[[file:./img/kitchen_aoki.png]]

- ※一斉会議での発表は新入社員ぶり(多分)

- 名前:
  - 青木将太郎
  - ~ikoamu~

- 入社して:
  - ７年目（２０１８年入社）

- 好きなもの
  - org-mode、音楽
    
* 今日発表すること
- 好きなもの
  - org-mode
  - TidalCycles(音楽プログラミング)

** org-mode
- この謎のテキストファイル
- なんでもできるメモ帳くん
- 僕が入社して初めて参画したプロジェクトで使われてた
  - （まだあの.orgファイルあるのかな？）

*** Markdownっぽいやつ
  - *太字*
  - ~インラインコード~
  - /イタリック/
  - クオート
    #+begin_quote
    hogehoge
    #+end_quote
  - コードブロック
    #+begin_src shell
    echo "hello world"
    #+end_src
  - [ ] チェックボックス
  - テーブル
    | id | name   |
    |----+--------|
    |  1 | apple  |
    |  2 | banana |
    |  3 | grape  |
    |  4 | orange |

*** 拡張性がすごい
- ~org-mode~ は ~Emacs~ 上で使える
- ~Emacs~ 上では ~Emacs Lisp~ という謎の言語が動くので、コレを使ってさまざまな機能が実現できている
- *つまり、 ~Emacs Lisp~ で自分だけの最強のメモ帳がつくれる！*
 
**** 拡張機能も充実
***** ~org-agenda~
org-modeでタスク・スケジュール管理機能する機能

***** ~org-journal~
org-modeで日記を書く機能

***** ~org-present~
org-modeでプレゼンする機能

***** ~org-chef~
org-modeで料理のレシピを書く機能

***** ~ox-zenn~
org-modeでZennの記事を書く機能

などなど...

*** [[id:48D91596-EF2D-4AEC-91D8-4731EDB69336][org-babel]]もすごい
コードブロックをorg-mode上でそのまま実行できる機能

**** shell
#+begin_src shell
echo "hello world"
#+end_src

#+RESULTS:
: hello world!!!!??????

**** SQL 
#+name: categories
#+header: :engine postgres
#+header: :dbhost localhost :dbport 5433 :database app-db
#+header: :dbuser root :dbpassword password
#+begin_src sql
SELECT * FROM "Category";
#+end_src

#+tblname: categories-result
#+RESULTS: categories
|---|

**** python

*結果を別のコードブロックの引数に渡して実行もできる！*

#+header: :var result=categories-result
#+begin_src python :results output
  for row in result:
    print(f'[{row[0]}]: {row[3]}({row[2]})')
#+end_src

*** ということで
*org-babelを使ってTidalCyclesのライブコーディングをorg-modeでやります!*

** [[id:6EE32A1E-78EA-4524-9E44-CF7E89B75FF5][tidalcycles]]とは
https://tidalcycles.org/
- 音楽の即興演奏や作曲用に設計されたライブコーディング環境
- Alex McLeanさんが開発したOSS

*** 専門的な説明（ややこしい）

[[file:./img/tidalcycle_system.png]]

~SuperCollider~ という音響生成エンジン(プログラミング環境)上にインストールされた
~SuperDirt~ というサンプル音源やシンセサイザーを演奏するためのフレームワークを
~Emacs~ や ~VSCode~ などのテキストエディタから操作することができる
~Haskell~ のライブラリ(????????)

*** さっそく音を鳴らしてみる

#+begin_src tidal :results silent
d1 $ sound "bd:0 sn:1"
#+end_src

- bd: バスドラム
- sn: スネア

*** tidalcyclesの見方

#+begin_src tidal :results silent
  -- d1 $ sound "bd:0 sn:1"
hush
#+end_src

[[file:./img/bd_sn.svg]]

**** bd, sn
  - ~bdファイルの0番目の音声データ~ を流した後に ~snファイルの1番目の音声データ~ を流す
  - 音声データ（サンプル音源）はSuperDirtインストール時に大量にダウンロードされている

  #+begin_src bash :results silent
  open ~/Library/Application\ Support/SuperCollider/downloaded-quarks/Dirt-Samples 
  #+end_src

**** sound
  - 引数(~bd:0 sn:1~)の音声を鳴らす

**** d1
  - トラック(音を出す)
  - トラックはd1~d9まである
    - 同時に9個のトラックを使って音楽を演奏する

  #+begin_src tidal :results silent
    -- ドラム
    d1 $ sound "bd"

    -- ベース
    d2 $ sound "bd"
    -- メロディー
    --d3 $ sound "cp"
  #+end_src

  #+RESULTS:
  : tidal>

**** サイクル

- 1サイクルのスピード(Cycle Per Sec)

#+begin_src tidal :results silent
setcps (155/60/4)
#+end_src

基本的にはこんな感じ

*** tidalcyclesを使った複雑なリズムパターン

*** シンセサイザーも鳴らせる

**** シンセサイザーが好きな人向け

* ということで
 - org-modeとTidalCycles面白いです！暇な人触ってみてください。
   - 仕事ではあまり役に立たない技術だと思いますが面白いおもちゃです。
   
 - LTSさんとのLT大会が楽しかったので、もっと自分の好きなことの話をしようと思って
   久々に発表しました。
   #+ATTR_ORG: :width 250
   [[file:./img/show_your_screen.png]]
   #+begin_quote
   /コーディングするという行為自体を楽しみましょう。/

   /個人の楽しみとして、楽器を弾くように、詩を書いたり編み物をするように、
   コーディングするという活動自体を楽しむのです。/

   /ライブコーディングを通して、初めて自分で書いたプログラムが動いた時
   の感動を思い出しましょう。/

   /コーディングは仕事のためにいやいや書くものではなく、未知の世界へと
   足を踏み入れるエキサイティングな行為だったはずです。/

   /そして、その喜びを周囲の人たちにも伝えましょう。/
   #+end_quote

 - 一斉会議でみなさんも自分の好きなことの話を話しませんか？
   （多分仕事とあんまり関係なくていいと思います（多分））

* おわり
#+begin_src tidal :results silent
once $ s "bd" #gain 1.2
#+end_src
