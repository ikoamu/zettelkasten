:PROPERTIES:
:ID:       1399DEC2-CC55-454F-9D97-C015CDF5CF80
:END:
#+title: Flutter RenderBox was not laid out
#+filetags: :Flutter:

https://www.dhiwise.com/post/fixing-the-flutter-renderbox-was-not-laid-out-error

* RenderBoxとは
:PROPERTIES:
:ID:       5291AE01-6D24-44AF-B0AF-4E025E59560E
:END:
- [[id:92CA83DB-6830-4473-944B-F49B8AD1C31A][Flutter]]のレンダリングパイプラインの重要な役割
- ウィジェットのサイズと位置決めを担当しているコンポーネント
- 親から渡されたレイアウト制約を処理し、その制約の中でサイズを決定する
  -> [[id:F2658354-621A-487C-95F9-8EB482E666AB][Flutterの制約]]

* "Flutter RenderBox was not laid out" エラー
- RenderBoxまたはウィジェットが親ウィジェットの製薬の中でサイズが決定
  される前に描画を要求されたときに発生する

** 一般的な原因

*** RowやColumnの不適切な使用
- RowやColumnの子ウィジェットのサイズ制約の扱いには注意が必要
- 明示的な制約がないと、子ウィジェットは境界のない幅や高さになってしま
  い、エラーが発生する

*** Flexibleウィジェットの欠如
- RowやColumnの子ウィジェットのサイズが制約されていない場合や、利用可
  能なスペースが埋まっていなかったりするとエラーが発生する
- FlexやExpandedなどでスペースを埋める必要がある

*** サイズが制限されていない子ウィジェット
- サイズが制限されない方法でウィジェットがネストされると、エラーが発生
  することがある
- 例えば、ListViewをFlexibleでラップせずにColumn内に配置すると、
  ListViewがColumnが提供する無限の垂直スペースにあわせて拡大しようとす
  るためエラーが発生する

** エラーを特定する方法
Flutter RenderBox was not laid out（FlutterのRenderBoxはレイアウトされ
ていません）」というエラーがポップアップすると、スタックトレースで問題
のウィジェットやウィジェットがハイライトされる

*** エラーログの確認
- どのウィジェットがどのような状況でエラーを引き起こしたかが明記されている

*** DevToolsを使う
- ウィジェットツリーを視覚化し、レイアウトの制約が崩れそうな場所を特定する

*** ウィジェットツリーをチェックする
- Column、Rowなどのウィジェットを適切なサイズ制約なしで使用した可能性がある箇所を探す
- 特に、エラーで報告されたウィジェットには特に注意する

** エラーの解決

*** サイズ制約の追加
- ColumnやRowウィジェットが子ウィジェットに明示的なサイズを持つようにする
- Expanded、Flexible、SizedBoxなどのウィジェットを使って、利用可能なス
  ペース内での子供の多きさを指定することで実現する

*** ウィジェットを制約で囲む
- ウィジェットを入れ子にするときは、ウィジェットの配置とラップの方法を考慮する
- ウィジェットを拡大、または縮小する必要がある場合はFlexやExpandedなど
  のウィジェットでラップして適切な制約を提供する

*** 必要に応じてSingleChildScrollViewを利用する
- ListViewのような高さが固定されていないウィジェットを高さが固定されて
  いるウィジェット内に配置する必要がある場合、SingleChildScrollViewの
  使用を検討する
- 無限の高さを作成することなく、必要な時に子ウィジェットをスクロールさせることができる

*** Debug Paint Size Extensionを利用する
- Flutterには[[id:7D26A485-19E3-4143-9B04-3382276F5248][Debug Paint Size Extension]]というツールがあり、画面上のウィ
  ジェットのレイアウトを見える化することができる
- この拡張機能を有効にすると、ウィジェットの周りに色のついた枠線が表示
  され、サイズやレイアウトの問題を発見することができる

*** ConstraintsCallbackを利用する
- ウィジェットのレイアウト制約をプログラムで計算する必要がある
- LayoutBuilderっやCustomSingleChildLayoutのような特定のウィジェットで
  利用可能なConstraintsCallbackパラメータで実現できる
