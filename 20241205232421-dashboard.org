:PROPERTIES:
:ID:       FF5F65FA-3A85-4931-9A45-78AE66A7C310
:END:
#+title: dashboard
#+filetags: :wip:emacs:

- [[id:799D307C-B31B-4CF7-A986-3E19786CF7CE][emacs]]起動時の初期起動時に表示するDashboard
- この画面にやりたいこと・みたいものを集約したい

#+begin_src elisp
(dashboard-open)
#+end_src

#+RESULTS:
: #<buffer *dashboard*>

* 何がみたい？
** TODOリスト
** 記事
- Zenn & Qiitaなどでバズってる記事
- Twitterで有名な人がつぶやいているもの(SNS)
- あとでみたいと思ってたやつ
  - スマホでもみたいやつがあると嬉しい
** 書きかけのノート
-> wipタグをつけるとか？

#+begin_src elisp
  (defun get-nodes-by-tag (tag)
    (Org-roam-db-query [:select [
				 nodes:id
				 nodes:title
				 tags:tag
				 nodes:file]
				:from nodes
				:inner-join tags
				:on (= id node_id)
				:where (= tags:tag tag)
				]))
#+end_src

#+RESULTS:
: get-nodes-by-tag

#+begin_src elisp
  (get-nodes-by-tag "Flutter")
#+end_src

* Dashboardに好きなことを表示したい
- Custom Widgetと呼ばれてる
- ウィジェットウィジェットのコールバック関数を定義して ~dashboard-items~ に追加する
  #+begin_src elisp
    ;; 
    (defun dashboard-insert-custom (list-size)
      (insert "Custom text"))
    (add-to-list 'dashboard-item-generators  '(custom . dashboard-insert-custom))
    (add-to-list 'dashboard-items '(custom) t)
  #+end_src

  #+RESULTS:
  : ((recents . 5) (bookmarks . 5) (agenda . 5) (custom))
** リンクにしたい
- ファイル指定でバッファを開く方法は?
  #+begin_src elisp
    (org-roam-db-query [:select [
				 nodes:id
				 nodes:title
				 tags:tag
				 nodes:file]
				:from nodes
				:inner-join tags
				:on (= id node_id)
				:where (= tags:tag "wip")
				])
  #+end_src

  #+RESULTS:
  | 574282A6-1D2B-40B8-B073-D3EF2E2C6FDB | Merge Bomb BOMA-YE | wip | /Users/aokisusumutarou/zettelkasten/20241209231238-merge_bomb_boma_ye.org |
  | FF5F65FA-3A85-4931-9A45-78AE66A7C310 | dashboard          | wip | /Users/aokisusumutarou/zettelkasten/20241205232421-dashboard.org  |

  #+begin_src elisp
    (find-file "~/zettelkasten/20241209231238-merge_bomb_boma_ye.org")
  #+end_src

  #+RESULTS:
  : #<buffer 20241209231238-merge_bomb_boma_ye.org>

  - dashboardのウィジェットで押したら関数が実行されるようにするのがいいのか？
    https://github.com/emacs-dashboard/emacs-dashboard/issues/172
    -> ~dashboard-insert-section~ の中身を見るのが良さそう
** dashboard-insert-section
#+begin_src elisp
  (defmacro dashboard-insert-section
      (
       ;; セクションの名前（Bookmarks, Recent Filesなど）
       section-name
       ;; 表示するアイテムのリスト
       list
       ;; 表示するアイテムの最大数
       list-size
       ;; セクションの識別子
       shortcut-id
       ;; キーボードショートカット
       shortcut-char
       ;; アイテムがクリックされた時の動作
       action
       ;; ウィジェット作成時の追加パラメータ
       &rest widget-params
      ))
#+end_src

** Qiitaの記事
https://qiita.com/hyakt/items/f4468facec0478e06f7a

#+begin_src elisp
(defun dashboard-qiita-insert-list (list-display-name list)
  "Render LIST-DISPLAY-NAME and items of LIST."
  (dashboard-insert-heading list-display-name)
  (mapc (lambda (el)
          (insert "\n    ")
          (widget-create 'push-button
                         :action `(lambda (&rest ignore)
                                    (browse-url ,(cdr (assoc 'url el))))
                         :mouse-face 'highlight
                         :follow-link "\C-m"
                         :button-prefix ""
                         :button-suffix ""
                         :format "%[%t%]"
                         (decode-coding-string (cdr (assoc 'title el)) 'utf-8))) list))
#+end_src

#+RESULTS:
: dashboard-qiita-insert-list

#+begin_src elisp
(require 'request)
#+end_src

#+RESULTS:
: request

#+begin_src elisp
(defun dashboard-qiita-insert (list-size)
  "Add the list of LIST-SIZE items from qiita."
  (request
   (format "https://qiita.com/api/v2/items?page=1&per_page=%s" list-size)
   :sync t
   :parser 'json-read
   :success (cl-function
             (lambda (&key data &allow-other-keys)
               (dashboard-qiita-insert-list "Qiita:" data)))))
#+end_src

#+RESULTS:
: dashboard-qiita-insert

#+begin_src elisp
(add-to-list 'dashboard-item-generators '(qiita . dashboard-qiita-insert))
#+End_src

#+RESULTS:
: ((qiita . dashboard-qiita-insert) (recents . dashboard-insert-recents) (bookmarks . dashboard-insert-bookmarks) (projects . dashboard-insert-projects) (agenda . dashboard-insert-agenda) (registers . dashboard-insert-registers))

#+begin_src elisp
(setq dashboard-items '((qiita . 20)))
#+End_src

#+RESULTS:
: ((qiita . 20))

** Qiitaの記事を参考にやる
#+begin_src elisp
  (defun dashboard-wip-insert-list (list-display-name list)
    "Render LIST-DISPLAY-NAME and items of LIST."
    (dashboard-insert-heading list-display-name)
    (widget-create 'push-button
			   :action `(lambda (&rest ignore)
				      (dashboard-open))
			   :mouse-face 'highlight
			   :follow-link "\C-m"
			   :button-prefix ""
			   :button-suffix ""
			   :tag "reload"
			   )
    (mapc (lambda (el)
	    (insert "\n   :")
	    (widget-create 'push-button
			   :action `(lambda (&rest ignore)
				      (find-file el))
			   :mouse-face 'highlight
			   :follow-link "\C-m"
			   :button-prefix ""
			   :button-suffix ""
			   :tag "el"
			   )) list))

#+end_src

#+RESULTS:
: dashboard-wip-insert-list

#+begin_src elisp
  (defun dashboard-wip-insert (list-size)
    (dashboard-wip-insert-list
     "Wip:"
     '("/Users/aokisusumutarou/zettelkasten/20241209231238-merge_bomb_boma_ye.org" "/Users/aokisusumutarou/zettelkasten/20241205232421-dashboard.org")))
#+end_src

#+RESULTS:
: dashboard-wip-insert

#+begin_src elisp
(add-to-list 'dashboard-item-generators '(wip . dashboard-wip-insert))
#+end_src

#+RESULTS:
: ((wip . dashboard-wip-insert) (qiita . dashboard-qiita-insert) (recents . dashboard-insert-recents) (bookmarks . dashboard-insert-bookmarks) (projects . dashboard-insert-projects) (agenda . dashboard-insert-agenda) (registers . dashboard-insert-registers))

#+begin_src elisp
(setq dashboard-items '((wip . 20)))
#+end_src

#+RESULTS:
: ((wip . 20))

** アイコンを設定
#+begin_src elisp
(defun dashboard-insert-custom (list-size)
  (dashboard-insert-heading "News:"
                            nil
                            (all-the-icons-faicon "newspaper-o"
                                                  :height 1.2
                                                  :v-adjust 0.0
                                                  :face 'dashboard-heading))
  (insert "\n")
  (insert "      [[http://www.bbc.co.uk][BBC]]"))
#+end_src

#+RESULTS:
: dashboard-insert-custom

#+begin_src elisp
(print dashboard-items)
#+end_src

+RESULTS:
: ((recents . 5) (bookmarks . 5) (agenda . 5))

#+begin_src elisp
(print recents)
#+end_src

#+RESULTS:
: recents

